service: beamer

# Inspired and based on https://remaster.com/blog/nextjs-lambda-serverless-framework
provider:
  name: aws
  # https://aws.amazon.com/blogs/compute/node-js-18-x-runtime-now-available-in-aws-lambda/
  runtime: nodejs18.x
  region: eu-west-1
  deploymentBucket:
    blockPublicAccess: true
  deploymentPrefix: serverless
  logRetentionInDays: 30
  memorySize: 2048
  versionFunctions: false
  timeout: 10
  apiGateway:
    shouldStartNameWithService: true
    binaryMediaTypes:
      - "*/*"
  environment:
    NODE_PATH: "/opt/nodejs/node18/node_modules:/opt/nodejs/node_modules:/var/runtime/node_modules:/var/runtime:/var/task:/var/task/.next/standalone/node_modules"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - "s3:PutObject"
       - "s3:GetObject"
       - "s3:HeadObject"
      Resource: "arn:aws:s3:::${env:CACHE_BUCKET, 'example-bucket'}/*"

plugins:
  - serverless-dotenv-plugin
  - "@huksley/serverless-esbuild"
  - serverless-offline
  - serverless-domain-manager

package:
  patterns:
    - ".next"
    - "!.next/cache"
    - "public"
    - "next.config.js"
    - "package.json"

custom:
  dotenv:
    path: .env.local
    logging: true
    required:
      env:
        - CACHE_BUCKET
  esbuild:
    bundle: true
    minify: true
    exclude: "*"
    concurrency: 5
    keepOutputDirectory: true
    disableIncremental: true
    target: "node18"
    metafile: true
    external:
      - "next"
      - "@aws-sdk/client-s3"
  customDomains:
    - rest:
        domainName: beamer.${env:SERVERLESS_DOMAIN, "example.com"}
        createRoute53Record: true
        endpointType: edge
        autoDomain: true
  serverless-offline:
    - noPrependStageInUrl: true
    - reloadHandler: true

functions:
  api:
    handler: server.serverless
    events:
      - http: ANY /
      - http: ANY /{proxy+}